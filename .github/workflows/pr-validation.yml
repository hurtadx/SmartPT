name: Pull Request Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, develop]

jobs:
  # Validaci√≥n r√°pida para PRs
  pr-validation:
    runs-on: ubuntu-latest
    name: PR Quick Validation
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check PR Title
        run: |
          # Verificar que el t√≠tulo del PR sigue convenciones
          PR_TITLE="${{ github.event.pull_request.title }}"
          if [[ ! "$PR_TITLE" =~ ^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?: .+ ]]; then
            echo "PR title must follow conventional commits format"
            echo "Examples: 'feat: add user authentication', 'fix(auth): resolve login bug'"
            exit 1
          fi

      - name: Check Changed Files
        run: |
          # Listar archivos cambiados
          echo "## Changed Files" >> $GITHUB_STEP_SUMMARY
          git diff --name-only origin/${{ github.base_ref }}...HEAD >> $GITHUB_STEP_SUMMARY

      - name: Check for Sensitive Files
        run: |
          # Verificar que no se est√°n commiteando archivos sensibles
          SENSITIVE_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.(env|key|pem|p12)$' || true)
          if [ ! -z "$SENSITIVE_FILES" ]; then
            echo "Sensitive files detected in PR:"
            echo "$SENSITIVE_FILES"
            exit 1
          fi

  # An√°lisis de c√≥digo solo en archivos cambiados
  changed-files-analysis:
    runs-on: ubuntu-latest
    name: Analyze Changed Files
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Changed PHP Files
        id: changed-php
        run: |
          CHANGED_PHP=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep '\.php$' || true)
          echo "files=$CHANGED_PHP" >> $GITHUB_OUTPUT

      - name: Get Changed JS/TS Files  
        id: changed-js
        run: |
          CHANGED_JS=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.(js|jsx|ts|tsx)$' || true)
          echo "files=$CHANGED_JS" >> $GITHUB_OUTPUT

      - name: Analyze PHP Files
        if: steps.changed-php.outputs.files != ''
        run: |
          echo "üîç Analyzing PHP files..."
          echo "${{ steps.changed-php.outputs.files }}"

      - name: Analyze JavaScript Files
        if: steps.changed-js.outputs.files != ''
        run: |
          echo "üîç Analyzing JavaScript files..."
          echo "${{ steps.changed-js.outputs.files }}"

  # Tests solo si hay cambios relevantes
  conditional-tests:
    runs-on: ubuntu-latest
    name: Conditional Tests
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if Backend Changed
        id: backend-changed
        run: |
          if git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -q '^SmartBackend/'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if Frontend Changed
        id: frontend-changed
        run: |
          if git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -q '^SmartFrontend/'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Backend Tests
        if: steps.backend-changed.outputs.changed == 'true'
        run: |
          echo "Running backend tests..."
          # Aqu√≠ ir√≠a la l√≥gica de tests del backend

      - name: Run Frontend Tests
        if: steps.frontend-changed.outputs.changed == 'true'
        run: |
          echo " Running frontend tests..."
          # Aqu√≠ ir√≠a la l√≥gica de tests del frontend

  # Comentario autom√°tico con resumen
  pr-summary:
    runs-on: ubuntu-latest
    name: PR Summary
    needs: [pr-validation, changed-files-analysis, conditional-tests]
    if: always()
    
    steps:
      - name: Comment PR Summary
        uses: actions/github-script@v7
        with:
          script: |
            const summary = `
            ## üìã PR Validation Summary
            
            **Validation Status:** ${{ needs.pr-validation.result == 'success' && ' Passed' || 'Failed' }}
            **Analysis Status:** ${{ needs.changed-files-analysis.result == 'success' && 'Completed' || ' Failed' }}
            **Tests Status:** ${{ needs.conditional-tests.result == 'success' && ' Passed' || ' Failed' }}
            
            **Branch:** \`${{ github.head_ref }}\` ‚Üí \`${{ github.base_ref }}\`
            **Author:** @${{ github.event.pull_request.user.login }}
            
            ---
            *Automated PR validation by SmartPT CI/CD*
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
